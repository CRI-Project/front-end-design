{"remainingRequest":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/src/views/Contorl/Control.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/src/views/Contorl/Control.vue","mtime":1640418048597},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/cache-loader/dist/cjs.js","mtime":1638074846295},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/babel-loader/lib/index.js","mtime":1638074846154},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/cache-loader/dist/cjs.js","mtime":1638074846295},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/vue-loader/lib/index.js","mtime":1638074906194}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Z2V0TGlzdCwgY2hhbmdlU3RhdGV9IGZyb20gIi4uLy4uL2FwaS9ob21lQVBJIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ29udHJvbCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7dGV4dDogJ0RldmljZSBOYW1lJywgdmFsdWU6J3Byb2Nlc3NvckNvZGUnfSwKICAgICAgICB7dGV4dDogJ1VwZGF0ZSBUaW1lJywgdmFsdWU6J2RhdGVUaW1lJ30sCiAgICAgICAge3RleHQ6ICdUZW1wKMuaQyknLCB2YWx1ZTondGVtcGVyYXR1cmUnfSwKICAgICAgICB7dGV4dDogJ0NPMihwcG0pJywgdmFsdWU6J3BwbSd9LAogICAgICAgIHt0ZXh0OiAnSHVtaWRpdHkoJSknLCB2YWx1ZTonaHVtaWRpdHknfSwKICAgICAgXSwKICAgICAgc2Vuc29yVGFibGU6W10sCiAgICAgIHBhZ2U6IDEsCiAgICAgIFVSTDogIi9nZW5lcmF0b3Ivc2Vuc29yZGF0YXRlc3QvdGVzdEluZm8vIiwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHF1ZXJ5KCkgewogICAgICBnZXRMaXN0KCkudGhlbihyZXMgPT4gewogICAgICAgIC8vIHRoaXMuc2Vuc29yVGFibGVbcGFyc2VJbnQocmVzLmRhdGEucHJvY2Vzc29yQ29kZSktMV0gPSByZXMuZGF0YTsKICAgICAgICB0aGlzLnNlbnNvclRhYmxlLnBvcCgpCiAgICAgICAgdGhpcy5zZW5zb3JUYWJsZS5wdXNoKHJlcy5kYXRhKQogICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgfSkKICAgIH0sCiAgICBjaGFuZ2VTZW5zb3JTdGF0ZSgpIHsKICAgICAgY2hhbmdlU3RhdGUoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgfSkKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnF1ZXJ5KCkKICAgIHRoaXMuY2hhbmdlU2Vuc29yU3RhdGUoKQogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgc2V0VGltZW91dCh0aGlzLnF1ZXJ5LCAwKQogICAgfSwgMTAwMCAqIDEwKQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgICB0aGlzLnRpbWVyID0gbnVsbDsKICB9LAp9Cg=="},{"version":3,"sources":["Control.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Control.vue","sourceRoot":"src/views/Contorl","sourcesContent":["<template>\n  <div>\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"sensorTable\"\n        :items-per-page=\"10\"\n        class=\"elevation-1\"\n    >\n    </v-data-table>\n    <v-btn @click=\"changeSensorState(1)\">\n      OPEN/CLOSE\n    </v-btn>\n  </div>\n</template>\n\n<script>\nimport {getList, changeState} from \"../../api/homeAPI\";\n\nexport default {\n  name: \"Control\",\n  data() {\n    return {\n      headers: [\n        {text: 'Device Name', value:'processorCode'},\n        {text: 'Update Time', value:'dateTime'},\n        {text: 'Temp(ËšC)', value:'temperature'},\n        {text: 'CO2(ppm)', value:'ppm'},\n        {text: 'Humidity(%)', value:'humidity'},\n      ],\n      sensorTable:[],\n      page: 1,\n      URL: \"/generator/sensordatatest/testInfo/\",\n    }\n  },\n  methods: {\n    query() {\n      getList().then(res => {\n        // this.sensorTable[parseInt(res.data.processorCode)-1] = res.data;\n        this.sensorTable.pop()\n        this.sensorTable.push(res.data)\n      }).catch(err => {\n        console.log(err)\n      })\n    },\n    changeSensorState() {\n      changeState().then(res => {\n        console.log(res)\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n  },\n  mounted() {\n    this.query()\n    this.changeSensorState()\n    this.timer = setInterval(() => {\n      setTimeout(this.query, 0)\n    }, 1000 * 10)\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}