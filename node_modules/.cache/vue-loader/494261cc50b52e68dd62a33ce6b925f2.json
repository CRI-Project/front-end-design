{"remainingRequest":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/src/components/Register.vue?vue&type=style&index=0&id=7bf3755a&scoped=true&lang=css&","dependencies":[{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/src/components/Register.vue","mtime":1640439720681},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/css-loader/dist/cjs.js","mtime":1638074900368},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638074906194},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/postcss-loader/src/index.js","mtime":1638074905772},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/cache-loader/dist/cjs.js","mtime":1638074846295},{"path":"/Users/qiulihao/WebstormProjects/CRI-Project-front-end-design/node_modules/vue-loader/lib/index.js","mtime":1638074906194}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgxIHsKICBjb2xvcjogIzdFN0U3RTsKfQoKLmNvbnRhaW5lciB7CiAgd2lkdGg6IDQwMHB4OwogIGhlaWdodDogNDAwcHg7CiAgcGFkZGluZzogMjBweDsKCiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDUwJTsKICB0b3A6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKfQoKZWwtbGluayB7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgbGluZS1oZWlnaHQ6IDIwcHgKfQoKI2JhY2sgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICByaWdodDogNSU7CiAgdG9wOiAxMCU7Cn0KCg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>REGISTER</h1>\n    <el-form ref=\"registerForm\" status-icon :rules=\"registerRules\" :model=\"registerForm\" class=\"login_form\" label-width=\"0\">\n      <el-form-item prop=\"username\">\n        <el-input v-model=\"registerForm.username\" prefix-icon=\"el-icon-user\" placeholder=\"username\"/>\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input v-model=\"registerForm.password\" type=\"password\" prefix-icon=\"el-icon-lock\"\n                  placeholder=\"password\"/>\n      </el-form-item>\n      <el-form-item prop=\"checkPassword\">\n        <el-input v-model=\"registerForm.checkPassword\" type=\"password\" prefix-icon=\"el-icon-lock\"\n                  placeholder=\"check password\"/>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"register\">Sign up</el-button>\n        Already have an account?\n        <el-link type=\"primary\" @click=\"backToLogIn\">Sign in</el-link>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport {registerAPI} from \"../api/loginAPI\";\n\nexport default {\n  name: \"Register\",\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please enter your password again'));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('The two passwords are inconsistent!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        checkPassword: \"\"\n      },\n      registerRules: {\n        username: [\n          {required: true, message: 'Enter Username', trigger: 'blur'},\n          {min: 5, max: 12, message: 'Username between 5 - 12 long', trigger: 'blur'}//blur: 失去焦点属性\n        ],\n        password: [\n          {required: true, message: 'Enter Password', trigger: 'blur'},\n          {min: 6, max: 10, message: 'Username between 6 - 10 long', trigger: 'blur'}\n        ],\n        checkPassword: [\n          {validator: validatePass, trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  methods: {\n    backToLogIn() {\n      this.$emit(\"handleClose\")\n    },\n    register() {\n      this.$refs.registerForm.validate(async valid => {\n        if (!valid) return;\n        let registerForm1 = {\n          username: this.registerForm.username,\n          password: this.registerForm.password,\n        };\n        registerAPI(registerForm1).then(res => {\n          if (res.data.code === 500) {\n            this.$store.dispatch('message/openSnackbar', {\n              msg: res.data.msg,\n              color: 'warning',\n            })\n          } else {\n            this.$store.dispatch('message/openSnackbar', {\n              msg: res.data.msg,\n              color: 'success',\n            })\n            this.backToLogIn()\n          }\n        }).catch(err => {\n          this.$store.dispatch('message/openSnackbar', {\n            msg: err,\n            color: 'error',\n          })\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\nh1 {\n  color: #7E7E7E;\n}\n\n.container {\n  width: 400px;\n  height: 400px;\n  padding: 20px;\n\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\nel-link {\n  margin-left: 10px;\n  line-height: 20px\n}\n\n#back {\n  position: absolute;\n  right: 5%;\n  top: 10%;\n}\n\n</style>\n"]}]}